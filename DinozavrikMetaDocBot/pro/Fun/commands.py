from telebot import types
import os
import shutil

from .botik import bot  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å .botik
from .compareFILES.compareFun import compare_files





# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥ /start, /Hello, /Hola
@bot.message_handler(commands=['start', 'Hello', 'Hola'])
async def start_command(message):
    await bot.send_message(message.chat.id,
                           f"Hola, {message.from_user.first_name}!\nI am dinozavrik Metadoc\nLet's be friends.üå∏\nI am learning to work with files.")


@bot.message_handler(commands=['help'])  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /help
async def help_command(message):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    commands_list = [
        '/start - –ù–∞—á–∞–ª–æ –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º',
        '/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥',
        '/handle_document - –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç',
        '/save_file_for_work - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏',
        '/click - –í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è —Å —Ñ–∞–π–ª–æ–º',
        '/Dinozavrik_Secret_Diary - –£–∑–Ω–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é Dinozavrika'
    ]

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥
    commands_text = "<u>Available Commands:</u>\n" + "\n".join(commands_list)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
    await bot.send_message(message.chat.id, commands_text, parse_mode='html')
    """
        parse_mode = 'html'
        <b> </b> - –∂–∏—Ä–Ω—ã–π
        <em> </em> - –∫—É—Ä—Å–∏–≤
        <u> </u> - –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ
    """


@bot.message_handler(commands=['Dinozavrik_Secret_Diary'])
async def info_command(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    await bot.send_message(message.chat.id, "Ooow, it's so cute that you want to know about me."
                                            "\nI was born 13.11.2024.\nOn first day of my life could answer only for /start."
                                            "\n(14.11.2024) I can answer for –ø—Ä–∏–≤–µ—Ç."
                                            "\n\nShe needed some rest and time to do somethings for university."
                                            "\nI miss you, mum...\n"
                                            "\nToday (05.12.2024)I have button to supply you action with file.")

"""
@bot.message_handler(content_types=['photo'])
async def get_picture(message):
    await bot.reply_to(message, "I know him! So handsome!")
"""
#######################################################################################################
# –§—É–Ω–∫—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ -> (–æ–±—Ä–∞–±–æ—Ç–∫–∞) -> —É–¥–∞–ª–µ–Ω–∏–µ


def delete_files_in_directory(directory_path):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞
    if not os.path.exists(directory_path):
        return f"–ü–∞–ø–∫–∞ '{directory_path}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."

    """
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    confirmation = input(f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ '{directory_path}'? (–¥–∞/–Ω–µ—Ç): ")
    if confirmation.lower() != '–¥–∞':
        return "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."
    """

    results = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º –∏ –ø–∞–ø–∫–∞–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    for filename in os.listdir(directory_path):
        file_path = os.path.join(directory_path, filename)
        try:
            if os.path.isfile(file_path):
                os.remove(file_path)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
                results.append(f"–§–∞–π–ª '{file_path}' —É–¥–∞–ª—ë–Ω.")
            elif os.path.isdir(file_path):
                shutil.rmtree(file_path)  # –£–¥–∞–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                results.append(f"–ü–∞–ø–∫–∞ '{file_path}' –∏ –≤—Å–µ –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —É–¥–∞–ª–µ–Ω—ã.")
        except Exception as e:
            results.append(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ '{file_path}': {e}")

    return "\n".join(results)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–∞–∫ —Å—Ç—Ä–æ–∫—É


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
@bot.message_handler(commands=['click'])
async def buttons(message):
    markup = types.InlineKeyboardMarkup()

    button1 = types.InlineKeyboardButton('‚ôªÔ∏è–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å‚ôªÔ∏è',callback_data='convert')
    markup.add(button1)

    button2 = types.InlineKeyboardButton('üëÄ–°—Ä–∞–≤–Ω–∏—Ç—åüëÄ', callback_data='compare')
    button3 = types.InlineKeyboardButton('üî§–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—åüî§', callback_data='rename')
    markup.add(button2, button3)

    await bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
async def callback_query(call):

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ
    files = [f for f in os.listdir(SAVE_FOLDER) if os.path.isfile(os.path.join(SAVE_FOLDER, f))]
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–∞
    files.sort(key=lambda x: os.path.getmtime(os.path.join(SAVE_FOLDER, x)), reverse=True)

    # –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–≤—É—Ö —Ñ–∞–π–ª–æ–≤
    if len(files) >= 2:
        file1 = os.path.join(SAVE_FOLDER, files[0])
        file2 = os.path.join(SAVE_FOLDER, files[1])

        if call.data == 'convert':
            text = '–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: '
            await bot.answer_callback_query(call.id)  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
            await bot.send_message(call.message.chat.id, text)
            #await bot.send_message()

        elif call.data == 'compare':
            text = '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ: '
            await bot.answer_callback_query(call.id)
            await bot.send_message(call.message.chat.id, text)
            answer = compare_files(file1, file2)
            delete_files_in_directory(SAVE_FOLDER) # –û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–∫–∏ SAVE_FOLDER
            answer = answer +'\n–ü–∞–ø–∫–∞ SAVE_FOLDER –æ—á–∏—â–µ–Ω–∞! üóëÔ∏è'
            await bot.send_message(call.message.chat.id, answer)

        elif call.data == 'rename':
            text = '–¢–∞–∫ –≥–æ—Ä–∞–∑–¥–æ –ª—É—á—à–µ!\n–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: '
            await bot.answer_callback_query(call.id)
            await bot.send_message(call.message.chat.id, text)
    else:
        await bot.send_message(call.message.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ.')




SAVE_FOLDER = 'Pro/Fun/saveFiles'

# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not os.path.exists(SAVE_FOLDER):
    #os.makedirs(SAVE_FOLDER)
    os.mkdir(SAVE_FOLDER)

# –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
user_files = []

@bot.message_handler(content_types=['document'])  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
async def handle_file(message):
    user_files.append(message.document.file_id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id –≤ —Å–ø–∏—Å–æ–∫
    # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ file_id
    await bot.send_message(message.chat.id,
                           f"–§–∞–π–ª –ø—Ä–∏–Ω—è—Ç! –í–∞—à file_id: {message.document.file_id}. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /save_file_for_work –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")

@bot.message_handler(commands=['save_file_for_work'])  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /save_file_for_work
async def save_files_command(message):
    if not user_files:
        await bot.send_message(message.chat.id, "–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è! üìÇ")
        return

    for file_id in user_files:
        # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ file_id
        await bot.send_message(message.chat.id, f"–ü—ã—Ç–∞—é—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å file_id: {file_id}")

        file_info = await bot.get_file(file_id)
        file_path = file_info.file_path

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
        try:
            downloaded_file = await bot.download_file(file_path)
            file_name = file_info.file_path.split('/')[-1]  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –ø—É—Ç–∏
            file_save_path = os.path.join(SAVE_FOLDER, file_name)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            with open(file_save_path, 'wb') as new_file:
                new_file.write(downloaded_file)
            await bot.send_message(message.chat.id,
                                   f"–§–∞–π–ª {file_name} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {file_save_path}.")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        except Exception as e:
            await bot.send_message(message.chat.id, f" [!] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_name}: {e}")
            return

        user_files.clear()  # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ
        if os.listdir(SAVE_FOLDER):  # –ï—Å–ª–∏ –ø–∞–ø–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è
            await bot.send_message(message.chat.id, "–§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! üéâ")
        else:
            await bot.send_message(message.chat.id,
                                   "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª—ã. üòü –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")
#########################################################################################################################################

# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: True)  # —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
async def hola(message):
    # –ü—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    text = message.text.lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–ø–∏—Å–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "–ø—Ä–∏–≤–µ—Ç"
    if text == "–ø—Ä–∏–≤–µ—Ç":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.send_message(message.chat.id,
                               f"Hola, {message.from_user.first_name}!\nI am dinozavrik Metadoc.\nRight now my mum and I are learning how to work with files and messages from you.\nI hope this will help me make your life easier.\nLet's be friends.üå∏")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–ø–∏—Å–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "id"
    elif text == 'id':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await bot.reply_to(message, f'ID: {message.from_user.id}')
    else:
        await bot.send_message(message.chat.id, "üò≠")
        await bot.reply_to(message, "–ú–Ω–µ —ç—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ \n –î–∞–≤–∞–π —Ç—ã –µ—â—ë —Ä–∞–∑–æ–∫ –Ω–∞–ø–∏—à–µ—à—å")
        await bot.send_message(message.chat.id, "ü•π")
