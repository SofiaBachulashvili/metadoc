 """
    parse_mode = 'html'
    <b> </b> - жирный
    <em> </em> - курсив
    <u> </u> - подчеркивание
"""

"""
# Эта функция обрабатывает текстовые сообщения от пользователя
@bot.message_handler(func=lambda message: True)  # Указываем, что эта функция будет принимать все текстовые сообщения

# Обработчик для команд /start, /Hello, /Hola
@bot.message_handler(commands=['start', 'Hello', 'Hola'])

# Обработчик для файлов с определенным разрешением
@bot.message_handler(content_types=['photo', 'video'])
"""

"""
1. Импорт библиотеки:
        Импортируем библиотеку telebot, которая позволяет взаимодействовать с API Telegram.

2. Создание экземпляра бота:
        Создаем экземпляр TeleBot, передавая ему токен, который был получен от BotFather в Telegram.

3. Декоратор @bot.message_handler(commands=['start', 'Hello', 'Hola']):
        Этот декоратор регистрирует функцию start_command как обработчик для команд /start, /Hello и /Hola.
        Когда пользователь отправляет одну из этих команд, бот вызывает указанную функцию.

4. Определение функции start_command(message):
        Функция принимает один аргумент message, в котором содержится информация о сообщении, включая ID чата и данные о пользователе.
        Внутри функции мы формируем текст ответа, приветствуя пользователя по имени и предоставляя краткую информацию о боте.
5. Отправка сообщения:
        Мы используем bot.send_message() для отправки сообщения в чат.
        message.chat.id указывает, куда именно отправить сообщение.
        Форматируем приветствие с использованием имени пользователя (message.from_user.first_name), чтобы сделать ответ более личным и дружелюбным.
"""